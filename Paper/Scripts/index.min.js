

//Work with AngularJS

////*** initial module
var helloApplication = angular.module('helloApplication', []);
//var crudBaseUrl = '@Url.Content("~/hello/") ';

//alert('@ViewBag.Hello');
//*** controller


helloApplication.controller('helloController', function ($scope, $http) {

    angular.isUndefinedOrNull = function (val) {
        return angular.isUndefined(val) || val === null
    }

    //app logic here
    {

    }

    //default value

    $scope.selectSignalL1 = "pretimed";
    $scope.selectSignalL2 = "pretimed";
    $scope.selectSignalL3 = "pretimed";
    $scope.selectSignalL4 = "pretimed";

    $scope.selectLegP1 = "1";
    $scope.selectLegP2 = "2";
    $scope.selectLegP3 = "3";
    $scope.selectLegP4 = "4";
    $scope.selectLegP5 = "1";
    $scope.selectLegP6 = "2";
    $scope.selectLegP7 = "3";
    $scope.selectLegP8 = "4";

    $scope.currentTab = 1;

    //*** $scope is a parameter in controller, it is dynamic properties, we can assign values to it, which can be later can be accessed in UI element
    //$scope.helloMessage = "Hello World with AngularJS on " + (new Date()).toLocaleString();
    //$scope.helloPicture = "/content/image/blog2image.png"

    $scope.clickInput = function () {

        $scope.sh3Show = false;
        $scope.sh2Show = false;
        $scope.sh6Show = false;
        $scope.sh7Show = false;
        $scope.sh8Show = false

        /*********************************/

        //validate
        var sfr = angular.isUndefinedOrNull($scope.textStationFlow) == true ? 0 : $scope.textStationFlow;
        if (sfr < 1800)
        {
            alert("Station Flow Rate should have a value > 1800");
            return;
        }

        var wl1 = angular.isUndefinedOrNull($scope.textWidthL1) == true ? 0 : $scope.textWidthL1;
        if (wl1 < -6 || wl1 > 10) {
            alert("Lane Width L1 should have a value > -6 and < 10");
            return;
        }


        var wl2 = angular.isUndefinedOrNull($scope.textWidthL2) == true ? 0 : $scope.textWidthL2;
        if (wl2 < -6 || wl2 > 10) {
            alert("Lane Width L2 should have a value > -6 and < 10");
            return;
        }


        var wl3 = angular.isUndefinedOrNull($scope.textWidthL3) == true ? 0 : $scope.textWidthL3;
        if (wl3 < -6 || wl3 > 10) {
            alert("Lane Width L3 should have a value > -6 and < 10");
            return;
        }

        var wl4 = angular.isUndefinedOrNull($scope.textWidthL4) == true ? 0 : $scope.textWidthL4;
        if (wl4 < -6 || wl4 > 10) {
            alert("Lane Width L4 should have a value > -6 and < 10");
            return;
        }



        /************************************/


       //progressbar
        NProgress.configure({ showSpinner: true, parent: "#progress1" });
        NProgress.start();

        //object general
        var Genr =
            {
                Analyst: $scope.textAnalyst,
                Company: $scope.textCompany,
                Intersect: $scope.textIntersect,
                Area: angular.isUndefinedOrNull($scope.textArea) == true ? "other" : $scope.textArea,
                Date: $scope.selectDate + "/" + $scope.selectMonth + "/20" + $scope.selectYear,

                Period: $scope.selectStart + "-" + $scope.selectFinish,

                StationFlow: $scope.textStationFlow,
                Crosswalk: $scope.textCrosswalk,

                HvL1L2: angular.isUndefinedOrNull($scope.textHeavyL1L2) == true ? 0 : $scope.textHeavyL1L2.replace('%', ''),
                HvL3L4: angular.isUndefinedOrNull($scope.textHeavyL3L4) == true ? 0 : $scope.textHeavyL3L4.replace('%', '')
            };

        //array geometric
        var GeomeList = [];
        var GeomeL1 =
            {
                Grade: angular.isUndefinedOrNull($scope.textGradeL1) == true ? 0 : $scope.textGradeL1.replace('%', ''),
                Width: $scope.textWidthL1,
                NlmLT: $scope.selectLaneLTL1,
                NlmTH: $scope.selectLaneTHL1,
                NlmRT: $scope.selectLaneRTL1
            };


        GeomeList.push(GeomeL1);

        var GeomeL2 =
        {
            Grade: angular.isUndefinedOrNull($scope.textGradeL2) == true ? 0 : $scope.textGradeL2.replace('%', ''),
            Width: $scope.textWidthL2,
            NlmLT: $scope.selectLaneLTL2,
            NlmTH: $scope.selectLaneTHL2,
            NlmRT: $scope.selectLaneRTL2
        };

        GeomeList.push(GeomeL2);

        var GeomeL3 =
        {
            Grade: angular.isUndefinedOrNull($scope.textGradeL3) == true ? 0 : $scope.textGradeL3.replace('%', ''),
            Width: $scope.textWidthL3,
            NlmLT: $scope.selectLaneLTL3,
            NlmTH: $scope.selectLaneTHL3,
            NlmRT: $scope.selectLaneRTL3
        };
        GeomeList.push(GeomeL3);

        var GeomeL4 =
        {
            Grade: angular.isUndefinedOrNull($scope.textGradeL4) == true ? 0 : $scope.textGradeL4.replace('%', ''),
            Width: $scope.textWidthL4,
            NlmLT: $scope.selectLaneLTL4,
            NlmTH: $scope.selectLaneTHL4,
            NlmRT: $scope.selectLaneRTL4,
        };
        GeomeList.push(GeomeL4);

        //array volumn
        var VolmList = [];

        var VolmL1 = 
            {
                VLT: $scope.textVolumnLTL1, 
                VTH: $scope.textVolumnTHL1,
                VRT: $scope.textVolumnRTL1,

                //swap value
                LGLT: $scope.selectLaneGroupL1LT,
                LGTH: $scope.selectLaneGroupL1TH,
                LGRT: $scope.selectLaneGroupL1RT,

                PHF: $scope.textPeakHourL1,
                PA: $scope.selectSignalL1,
                l1: $scope.textStartLostTimeL1,
                e: $scope.textEffectGreenTimeL1,

                //new value
                T: $scope.textEffectGreenTimeL1,

                AT: $scope.textArrivalTypeL1,

                Vped: $scope.textPedestrianL1,
                vbic: $scope.textBicycleL1,
                Pyos: $scope.selectParkingL1,
                Nm: $scope.textParkingL1,

                NB: $scope.textBusL1,
                Gps: $scope.textMinTimePedestrianL1,

                Nlt: $scope.selectLeftTurnLaneL1,
                LTp: $scope.selectLeftTurnPhaseL1,

                Nrt: $scope.selectRightTurnLaneL1,
                RTp: $scope.selectRightTurnPhaseL1,


                //new Nrec, Nturn
                Nrec: $scope.textCrossStreetL1,
                Nturn: $scope.textTurnningL1,
            };

        VolmList.push(VolmL1);

        var VolmL2 =
        {
            VLT: $scope.textVolumnLTL2,
            VTH: $scope.textVolumnTHL2,
            VRT: $scope.textVolumnRTL2,

            LGLT: $scope.selectLaneGroupL2LT,
            LGTH: $scope.selectLaneGroupL2TH,
            LGRT: $scope.selectLaneGroupL2RT,

            PHF: $scope.textPeakHourL2,
            PA: $scope.selectSignalL2,
            l1: $scope.textStartLostTimeL2,
            e: $scope.textEffectGreenTimeL2,

            //new value
            T: $scope.textEffectGreenTimeL2,

            AT: $scope.textArrivalTypeL2,

            Vped: $scope.textPedestrianL2,
            vbic: $scope.textBicycleL2,
            Pyos: $scope.selectParkingL2,
            Nm: $scope.textParkingL2,

            NB: $scope.textBusL2,
            Gps: $scope.textMinTimePedestrianL2,

            Nlt: $scope.selectLeftTurnLaneL2,
            LTp: $scope.selectLeftTurnPhaseL2,

            Nrt: $scope.selectRightTurnLaneL2,
            RTp: $scope.selectRightTurnPhaseL2,


            //new Nrec, Nturn
            Nrec: $scope.textCrossStreetL2,
            Nturn: $scope.textTurnningL2,
        };
        VolmList.push(VolmL2);

        var VolmL3 =
        {
            VLT: $scope.textVolumnLTL3,
            VTH: $scope.textVolumnTHL3,
            VRT: $scope.textVolumnRTL3,

            LGLT: $scope.selectLaneGroupL3LT,
            LGTH: $scope.selectLaneGroupL3TH,
            LGRT: $scope.selectLaneGroupL3RT,

            PHF: $scope.textPeakHourL3,
            PA: $scope.selectSignalL3,
            l1: $scope.textStartLostTimeL3,
            e: $scope.textEffectGreenTimeL3,

            //new value
            T: $scope.textEffectGreenTimeL3,

            AT: $scope.textArrivalTypeL3,

            Vped: $scope.textPedestrianL3,
            vbic: $scope.textBicycleL3,
            Pyos: $scope.selectParkingL3,
            Nm: $scope.textParkingL3,

            NB: $scope.textBusL3,
            Gps: $scope.textMinTimePedestrianL3,

            Nlt: $scope.selectLeftTurnLaneL3,
            LTp: $scope.selectLeftTurnPhaseL3,

            Nrt: $scope.selectRightTurnLaneL3,
            RTp: $scope.selectRightTurnPhaseL3,


            //new Nrec, Nturn
            Nrec: $scope.textCrossStreetL3,
            Nturn: $scope.textTurnningL3,
        };
        VolmList.push(VolmL3);


        var VolmL4 =
        {
            VLT: $scope.textVolumnLTL4,
            VTH: $scope.textVolumnTHL4,
            VRT: $scope.textVolumnRTL4,

            LGLT: $scope.selectLaneGroupL4LT,
            LGTH: $scope.selectLaneGroupL4TH,
            LGRT: $scope.selectLaneGroupL4RT,

            PHF: $scope.textPeakHourL4,
            PA: $scope.selectSignalL4,
            l1: $scope.textStartLostTimeL4,
            e: $scope.textEffectGreenTimeL4,

            //new value
            T: $scope.textEffectGreenTimeL4,

            AT: $scope.textArrivalTypeL4,

            Vped: $scope.textPedestrianL4,
            vbic: $scope.textBicycleL4,
            Pyos: $scope.selectParkingL4,
            Nm: $scope.textParkingL4,

            NB: $scope.textBusL4,
            Gps: $scope.textMinTimePedestrianL4,

            Nlt: $scope.selectLeftTurnLaneL4,
            LTp: $scope.selectLeftTurnPhaseL4,

            Nrt: $scope.selectRightTurnLaneL4,
            RTp: $scope.selectRightTurnPhaseL4,


            //new Nrec, Nturn
            Nrec: $scope.textCrossStreetL4,
            Nturn: $scope.textTurnningL4,
        };
        VolmList.push(VolmL4);

        //array signal phase
        var SignrList = [];
        var SignrP1 =
            {
                Leg: $scope.selectLegP1,
                Tfd: $scope.selectFlowP1,
                TimeY: $scope.textTimeYP1,
                TimeG: $scope.textTimeGP1,
            };
        SignrList.push(SignrP1);

        var SignrP2 =
            {
                Leg: $scope.selectLegP2,
                Tfd: $scope.selectFlowP2,
                //TimeY: $scope.textTimeYP2,
                //TimeG: $scope.textTimeGP2,
            };
        SignrList.push(SignrP2);

        var SignrP3 =
            {
                Leg: $scope.selectLegP3,
                Tfd: $scope.selectFlowP3,
                TimeY: $scope.textTimeYP2,
                TimeG: $scope.textTimeGP2,
            };
            SignrList.push(SignrP3);

        var SignrP4 =
            {
                Leg: $scope.selectLegP4,
                Tfd: $scope.selectFlowP4,
               // TimeY: $scope.textTimeYP4,
                //TimeG: $scope.textTimeGP4,
            };
        SignrList.push(SignrP4);

        ///5
        var SignrP5 =
            {
                Leg: $scope.selectLegP5,
                Tfd: $scope.selectFlowP5,
                TimeY: $scope.textTimeYP3,
                TimeG: $scope.textTimeGP3,
            };
        SignrList.push(SignrP5);


        var SignrP6 =
            {
                Leg: $scope.selectLegP6,
                Tfd: $scope.selectFlowP6,
                //TimeY: $scope.textTimeYP6,
                //TimeG: $scope.textTimeGP6,
            };
        SignrList.push(SignrP6);


        var SignrP7 =
            {
                Leg: $scope.selectLegP7,
                Tfd: $scope.selectFlowP7,
                TimeY: $scope.textTimeYP4,
                TimeG: $scope.textTimeGP4,
            };
        SignrList.push(SignrP7);


        var SignrP8 =
            {
                Leg: $scope.selectLegP8,
                Tfd: $scope.selectFlowP8,
                //TimeY: $scope.textTimeYP8,
                //TimeG: $scope.textTimeGP8,
            };

        SignrList.push(SignrP8);

        //submit data to api server
        var postData =
        {
            "genr": Genr,
            "geolist": GeomeList,
            "volmlist": VolmList,
            "signllist": SignrList,
        };


        //alert($scope.selectLaneGroupL1LT); return;
    
        $http({
            method: "POST",
            url: "/api/fluid/volumn",
            data: postData,
            //contentType: "application/json"

        }).success(function (response) {


            $scope.volumns = response.volmlist;
            $scope.opposes = response.opposelist;
            $scope.bicycles = response.bicyclelist;
            $scope.phases = response.phaselist;

            $scope.sumphase = response.phaselist[0];
            $scope.losses = response.losslist;

            $scope.dISTR = response.dISTR;

            $scope.dI = response.dI;

           // $scope.dI = response.dI;
            $scope.sumDA = response.sumDA;
            $scope.sumVA = response.sumVA;

            //focus tab
            //$scope.currentTab = 2;

            $scope.sh2Show = true;
            $scope.sh6Show = true;
            $scope.sh7Show = true;
            $scope.sh8Show = true;

            $scope.sh3Show = true;
            $scope.sh4Show = true;

            NProgress.done();

            showtab("sh2");
        
           // alert("OK");

        }).error(function () {


            $scope.volumns = null;
            $scope.opposes = null;
            $scope.bicycles = null;
            $scope.phaselist = null;
            $scope.sumphase = null;
            $scope.losses = null;
            $scope.dISTR = null;

            $scope.dI = null;

            $scope.sumDA = null;
            $scope.sumVA = null;

            $scope.sh2Show = false;
            $scope.sh6Show = false;
            $scope.sh7Show = false;
            $scope.sh8Show = false;

            $scope.sh3Show = false;
            $scope.sh4Show = false;

            NProgress.done();
            alert("FAIL");
        });

    }
    //end click function




});